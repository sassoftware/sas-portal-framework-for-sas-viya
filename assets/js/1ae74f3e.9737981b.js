"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[851],{5265:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>d,default:()=>u,frontMatter:()=>s,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"Objects/data-product-registry-object","title":"Data Product Registry","description":"The Data Product Registry object enables users to add data products to their environment. For this two things are requires for the users of this object:","source":"@site/docs/Objects/data-product-registry-object.md","sourceDirName":"Objects","slug":"/Objects/data-product-registry-object","permalink":"/sas-portal-framework-for-sas-viya/Objects/data-product-registry-object","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"sidebar_position":10},"sidebar":"defaultSidebar","previous":{"title":"Run Custom Code","permalink":"/sas-portal-framework-for-sas-viya/Objects/run-custom-code-object"},"next":{"title":"Data Product Marketplace","permalink":"/sas-portal-framework-for-sas-viya/Objects/data-product-marketplace-object"}}');var r=a(4848),o=a(8453);const s={sidebar_position:10},d="Data Product Registry",i={},l=[{value:"Data Product Schema",id:"data-product-schema",level:2},{value:"Data Products Table",id:"data-products-table",level:2}];function c(e){const t={code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"data-product-registry",children:"Data Product Registry"})}),"\n",(0,r.jsx)(t.p,{children:"The Data Product Registry object enables users to add data products to their environment. For this two things are requires for the users of this object:"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsx)(t.li,{children:"A data product schema has to be provided (see below)."}),"\n",(0,r.jsx)(t.li,{children:"A folder in which the user can write needs to be provided (see blow)."}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"It is thus recommended to create a special group - e.g. Data Product Creators - in order to provide the ability to create new data products. Please note that users of the data products need to be able to read in that folder."}),"\n",(0,r.jsxs)(t.p,{children:["In order to create a Data Product Registry object you have to set the objects type to ",(0,r.jsx)(t.em,{children:"dataProductRegistry"}),", there are additional attributes - example:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",children:'{\n    "name": "Data Product Registry",\n    "id": "dpr",\n    "width": 0,\n    "objectBorder": false,\n    "type": "dataProductRegistry",\n    "dataProductSchemaURI": "/files/files/UUID",\n    "dataProductFolderURI": "/folders/folders/UUID",\n    "dataProductNewFolderParentURI": "/folders/folders/UUID",\n    "dataProductCopyContent": ["/files/files/UUID", "/reports/reports/UUID"]\n}\n'})}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"dataProductSchemaURI"}),", here you have to provide the URI of the uploaded Data Product Schema (see below)."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"dataProductFolderURI"}),", specify the URI of the folder where the data product list is to be stored. In this folder a file will be created called ",(0,r.jsx)(t.em,{children:"data-products.json"}),", this file contains all of the registered data products. You can turn this into a SAS table using the code provided at the bottom of this page."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"dataProductNewFolderParentURI"}),", optional - specify if you want to have a folder in SAS Content to be created for you with the same name as the data product - please note that this requires the user to have write access for that folder."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"dataProductCopyContent"}),", optional - for this to work you also need to set a dataProductNewFolderParentURI. If you specify it can specify content inside of SAS Content that you want to be copied into the folder that was created for the data product - currently only file and report content is supported."]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"data-product-schema",children:"Data Product Schema"}),"\n",(0,r.jsxs)(t.p,{children:["There is no one correct definition of what you need or should know about a data product, thus this framework provides you a flexible method of adding a data product schema. Below you will find a big example json detailing all of the different options within this schema. The first two elements (",(0,r.jsx)(t.em,{children:"productName"})," and ",(0,r.jsx)(t.em,{children:"accessUrl"}),") are required as they provide essential technical elements for the framework."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",children:'[\n    {\n        "id": "productName",\n        "label": "Product Name",\n        "type": "text",\n        "required": true,\n        "placeholder": "Enter the name of your data product",\n        "validation": {\n            "minLength": 3,\n            "maxLength": 100,\n            "pattern": "^[a-zA-Z0-9 -]+$"\n        },\n        "description": "A unique and descriptive name for the data product."\n    },\n    {\n        "id": "accessUrl",\n        "label": "Access URL",\n        "type": "url",\n        "required": true,\n        "placeholder": "https://data-product.example.com/access",\n        "description": "URL to access the data product or its documentation."\n    },\n    {\n        "id": "description",\n        "label": "Description",\n        "type": "textarea",\n        "required": false,\n        "placeholder": "Provide a detailed description of the data product",\n        "validation": {\n            "maxLength": 500\n        },\n        "description": "A brief overview of the data product\'s purpose and content."\n    },\n    {\n        "id": "dataType",\n        "label": "Data Type",\n        "type": "dropdown",\n        "required": true,\n        "options": [\n            { "value": "relational", "label": "Relational Database" },\n            { "value": "nosql", "label": "NoSQL Database" },\n            { "value": "api", "label": "API Endpoint" },\n            { "value": "file", "label": "File Storage" },\n            { "value": "streaming", "label": "Streaming Data" }\n        ],\n        "description": "The primary type of data storage or access method."\n    },\n    {\n        "id": "sensitivityLevel",\n        "label": "Sensitivity Level",\n        "type": "radio",\n        "required": true,\n        "options": [\n            { "value": "public", "label": "Public" },\n            { "value": "internal", "label": "Internal Only" },\n            { "value": "confidential", "label": "Confidential" },\n            { "value": "restricted", "label": "Restricted" }\n        ],\n        "defaultValue": "internal",\n        "description": "The sensitivity classification of the data."\n    },\n    {\n        "id": "ownerEmail",\n        "label": "Owner Email",\n        "type": "email",\n        "required": true,\n        "placeholder": "e.g., owner@example.com",\n        "validation": {\n            "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,}$"\n        },\n        "description": "The email address of the data product owner."\n    },\n    {\n        "id": "tags",\n        "label": "Tags",\n        "type": "multiselect",\n        "required": false,\n        "options": [\n            { "value": "sales", "label": "Sales" },\n            { "value": "marketing", "label": "Marketing" },\n            { "value": "finance", "label": "Finance" },\n            { "value": "operations", "label": "Operations" },\n            { "value": "customer-data", "label": "Customer Data" }\n        ],\n        "description": "Keywords to categorize and search for the data product."\n    },\n    {\n        "id": "creationDate",\n        "label": "Creation Date",\n        "type": "date",\n        "required": true,\n        "defaultValue": "today",\n        "description": "The date the data product was created."\n    },\n    {\n        "id": "isActive",\n        "label": "Is Active?",\n        "type": "checkbox",\n        "required": false,\n        "defaultValue": true,\n        "description": "Indicates if the data product is currently active."\n    },\n    {\n        "id": "costCenter",\n        "label": "Cost Center",\n        "type": "number",\n        "required": false,\n        "placeholder": "e.g., 12345",\n        "validation": {\n            "min": 1000,\n            "max": 99999\n        },\n        "description": "The internal cost center associated with this data product."\n    }\n]\n'})}),"\n",(0,r.jsx)(t.h2,{id:"data-products-table",children:"Data Products Table"}),"\n",(0,r.jsxs)(t.p,{children:["To turn the ",(0,r.jsx)(t.em,{children:"data-products.json"})," into a table use the following code:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sas",children:"* Adjust this path as necessary for your environment;\nfilename dtPrdkts filesrvc folderPath='/Public/Portal/DPR' filename='data-products.json';\nlibname dtPrdkts json;\n\n* Macro to take the additional table data and join it back to the original table;\n%macro _add_json_data(tableName, numberOfColumns);\n    %local tableName numberOfColumns i;\n    \n    * Turn the different columns into one column;\n    data work._temp_data;\n        length &tableName. $32000.;\n        set dtPrdkts.&tableName.;\n\n        &tableName. = catx(' | ', of &tableName.:);\n        keep ordinal_root &tableName.;\n    run;\n\n    * Join the data back to the base;\n    proc sql noPrint noWarnrecurs;\n        create table work.data_products as\n            select a.*,\n                b.&tableName.\n                from work.data_products as a\n                    left join work._temp_data as b\n                        on a.ordinal_root EQ b.ordinal_root;\n    quit;\n\n    * Clean up;\n    proc datasets library=work noList;\n        delete _temp_data;\n    run; quit;\n%mend _add_json_data;\n\n* Retrieve the structure of the JSON and check for additional tables;\nproc sql noPrint;\n    create table work._json_tables_info as\n        select memname, nvar\n            from dictionary.tables\n                where libname = upcase(\"dtPrdkts\")\n                    and memname not in ('ALLDATA', 'ROOT');\nquit;\n\n* Handle the case if there are arrays in the JSON;\n%if &SQLOBS. GE 1 %then %do;\n    %put NOTE: Further processing will be done - there were &SQLOBS. tables found to process;\n    data work.data_products;\n        set dtPrdkts.root;\n    run;\n    \n    data _null_;\n        set work._json_tables_info;\n        * Substract 2 from nvar for the two ordinal_* variables;\n        args = compress('%nrstr(%_add_json_data(' || lowcase(memname) || ',' || nvar - 2 || '))');\n        call execute(args);\n    run;\n%end;\n%else %do;\n    %put NOTE: No additional tables found so no further processing is done;\n    data work.data_products;\n        set dtPrdkts.root;\n    run;\n%end;\n\n* Remove the ordinal_root artifact;\ndata sasdata.KONTOUR_DPE_MASTER; * #GERMHN, 20.6.25, alt: work.data_products;\n    set work.data_products(drop=ordinal_root);\nrun;\n\n* Clean up;\nfilename dtPrdkts clear;\nlibname dtPrdkts clear;\n%sysmacdelete _add_json_data;\nproc datasets library=work noList;\n    delete _json_tables_info;\nrun; quit;\n"})})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,t,a)=>{a.d(t,{R:()=>s,x:()=>d});var n=a(6540);const r={},o=n.createContext(r);function s(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);